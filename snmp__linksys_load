#!/usr/bin/perl -w
# -*- perl -*-
# vim: ft=perl

=head1 NAME

snmp__linksys_load - Munin plugin to monitor CPU usage by use of SNMP.

=head1 APPLICABLE SYSTEMS

Cisco Linksys SG300 series switch (or similar) that reports CPU load in:

#.iso.org.dod.internet.mgmt.mib-2.system.sysDescr.0 = STRING: SG300-52 52-Port Gigabit Managed Switch
#.iso.org.dod.internet.private.enterprises.9.6.1.101.1.7.0 = INTEGER: 2
#.iso.org.dod.internet.private.enterprises.9.6.1.101.1.8.0 = INTEGER: 23
#.iso.org.dod.internet.private.enterprises.9.6.1.101.1.9.0 = INTEGER: 8

=head1 CONFIGURATION

As a rule SNMP plugins need site specific configuration.  The default
configuration (shown here) will only work on insecure sites/devices.

   [snmp_*]
	env.version 2
        env.community public

In general SNMP is not very secure at all unless you use SNMP version
3 which supports authentication and privacy (encryption).  But in any
case the community string for your devices should not be "public".

Please see 'perldoc Munin::Plugin::SNMP' for further configuration
information.

=head1 INTERPRETATION

The average, over the last 5 seconds, last 1 minute, and last 5 minutes
of the percentage of time that this processor was not idle.

=head1 MIB INFORMATION

This plugin should return same information as "show cpu utilization"

=head1 MAGIC MARKERS

  #%# family=snmpauto
  #%# capabilities=snmpconf

=head1 VERSION

  $Id$

=head1 BUGS

None known.

=head1 AUTHOR

Copyright (C) original script 2006 Lars Strand
Documented and updated to use Munin::Plugin::SNMP by Matthew Boyle.
2020 modified by Matija Nalis for "Linksys SG300" series switch CPU load 

=head1 LICENSE

GPLv2.

=cut

use strict;
use Munin::Plugin::SNMP;
my $oid_cpu_5s='.1.3.6.1.4.1.9.6.1.101.1.7.0';
my $oid_cpu_1m='.1.3.6.1.4.1.9.6.1.101.1.8.0';
my $oid_cpu_5m='.1.3.6.1.4.1.9.6.1.101.1.9.0';

if (defined $ARGV[0] and $ARGV[0] eq 'snmpconf') {
	print "require ${oid_cpu_5s}.\n";
	exit 0;
}

my $session = Munin::Plugin::SNMP->session();

my @times = qw /5s 1m 5m/;
my @result = (	$session->get_single($oid_cpu_5s), 
	 	$session->get_single($oid_cpu_1m),
	 	$session->get_single($oid_cpu_5m) );

if (defined $ARGV[0] and $ARGV[0] eq "config") {
	my $host = $session->hostname;

	print "host_name $host\n" unless ($host eq 'localhost');
	print <<'EOC';
graph_title CPU usage in percent
graph_category system
graph_args --upper-limit 100 -l 0 
graph_vlabel % 
graph_info This graph shows the CPU load on the system.
EOC
	foreach my $timerange (@times) {
		print "cpu$timerange.label CPU $timerange\n";
		print "cpu$timerange.info CPU load for last $timerange\n";
	}
	exit 0;
}

# the values
for (my $i = 0; $i <= $#times; $i++) {
	my $timerange = $times[$i];
	my $load = $result[$i];
	print "cpu$timerange.value $load\n";
}

